# tasks/terraform.yml
# REF: https://docs.ansible.com/ansible/latest/collections/community/general/terraform_module.html

- name: Check if Terraform is installed
  command: terraform version
  register: terraform_version
  failed_when: false

- name: Fail if Terraform is not installed
  fail:
    msg: "Terraform is not installed or not accessible"
  when: terraform_version.rc != 0

- name: Initialize Terraform
  terraform:
    project_path: "{{ terraform_project_path | default('./terraform') }}"
    state: present
    force_init: true
    backend_config:
      bucket: "{{ terraform_state_bucket }}"
      key: "{{ project_name }}/{{ environment }}/terraform.tfstate"
      region: "{{ aws_region }}"
  when: terraform_state_bucket is defined

- name: Initialize Terraform (local state)
  terraform:
    # project_path: "{{ terraform_project_path | default('./terraform') }}/"
    project_path: "{{ terraform_project_path }}/"
    state: present
    force_init: false # true Switch to true only when provisioning new Terraform deployment
  when: terraform_state_bucket is not defined


- name: Check if terraform.tfvars exists
  stat:
    # path: "{{ terraform_project_path | default('./terraform') }}/terraform.tfvars"
    path: "../{{ terraform_project_path }}/terraform.tfvars"
  register: tfvars_file

- name: "Fail if terraform tfvars file does not exist"
  fail: 
    msg: "../{{ terraform_project_path }}/terraform.tfvars file is missing and is required"
  when: tfvars_file.stat.exists


- name: Plan Terraform deployment with tfvars
  terraform:
    project_path: "{{ terraform_project_path }}"
    state: planned
    plan_file: tfplan
    variables_files:
      - "terraform.tfvars"
    variables:
      aws_region: "{{ aws_region }}"
      project_name: "{{ project_name | default('med-counseling-cd') }}" #TODO : Debug why vars are not read from tfvars file
      environment: "{{ environment }}"
      app_image: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com/{{ ecr_repository_app }}:{{ image_tag | default('latest') }}"
      ui_image: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com/{{ ecr_repository_ui }}:{{ image_tag | default('latest') }}"


- name: Apply Terraform deployment
  terraform:
    project_path: "{{ terraform_project_path | default('./terraform') }}"
    state: present
    plan_file: tfplan
  register: terraform_output

- name: Store Terraform outputs
  set_fact:
    ecs_cluster_name: "{{ terraform_output.outputs.ecs_cluster_name.value }}"
    load_balancer_dns: "{{ terraform_output.outputs.load_balancer_dns.value }}"
    app_url: "{{ terraform_output.outputs.app_url.value }}"
    ui_url: "{{ terraform_output.outputs.ui_url.value }}"